To configure the UAA server, do the following:

1. Click **UAA**.
1. Under **PKS API Access Token Lifetime**, enter a time in seconds for the
PKS API access token lifetime. This field defaults to `600`.

    <img src="images/uaa.png" alt="UAA pane configuration">

1. Under **PKS API Refresh Token Lifetime**, enter a time in seconds for the
PKS API refresh token lifetime. This field defaults to `21600`.
1. Under **PKS Cluster Access Token Lifetime**, enter a time in seconds for the
cluster access token lifetime. This field defaults to `600`.
1. Under **PKS Cluster Refresh Token Lifetime**, enter a time in seconds for the
cluster refresh token lifetime. This field defaults to `21600`.
<p class="note"><strong>Note:</strong> <%= vars.recommended_by %> recommends
using the default UAA token timeout values.
By default, access tokens expire after ten minutes and refresh tokens expire
after six hours.
</p>
1. Under **Configure created clusters to use UAA as the OIDC provider**,
select **Enabled** or **Disabled**.
    - Enabling UAA as the OpenID Connect (OIDC) provider is a global default setting for PKS-provisioned clusters.
    For more information, see [Enabling UAA as an OIDC Provider](./manage-users.html#uaa-oidc).
    - You can override this setting and configure clusters to use a custom OIDC provider by applying a Kubernetes profile to the clusters.
    For instructions, see <a href="./k8s-profiles-dex-oidc.html">Add an OIDC Provider</a>.
    - If you do not enable UAA as the OIDC provider or apply a custom OIDC to clusters, then end users can only access clusters if they can access <%= vars.product_short %> itself.
    - To configure <%= vars.product_short %> to use UAA as the OIDC provider, do the following:
        1. Under **Configure created clusters to use UAA as the OIDC provider**, select **Enabled**.<br>
        ![OIDC configuration checkbox](images/oidc.png)
        1. For **UAA OIDC Groups Claim**, enter the name of your groups claim. This is used to set a user's group in the JSON Web Token (JWT) claim. The default value is `roles`.
        1. For **UAA OIDC Groups Prefix**, enter a prefix for your groups claim. This prevents conflicts with existing names. For example, if you enter the prefix `oidc:`, UAA creates a group name like `oidc:developers`. The default value is `oidc:`.
        1. For **UAA OIDC Username Claim**, enter the name of your username claim. This is used to set a user's username in the JWT claim. The default value is `user_name`. Depending on your provider, you can enter claims besides `user_name`, like `email` or `name`.
        1. For **UAA OIDC Username Prefix**, enter a prefix for your username claim. This prevents conflicts with existing names. For example, if you enter the prefix `oidc:`, UAA creates a username like `oidc:admin`. The default value is `oidc:`.
        <p class="note warning"><strong>Warning:</strong> <%= vars.recommended_by %> recommends adding OIDC prefixes to prevent users and groups from gaining unintended cluster privileges. If you change the above values for a pre-existing <%=vars.product_short %> installation, you must change any existing role bindings that bind to a username or group. If you do not change your role bindings, developers cannot access Kubernetes clusters. For instructions, see <a href="./manage-cluster-permissions.html">Managing Cluster Access and Permissions</a>.</p>

1. Select one of the following options:
  * To use an internal user account store for UAA, select **Internal UAA**.
  Click **Save** and continue to [(Optional) Host Monitoring](#syslog).
  * To use LDAP for UAA, select **LDAP Server** and continue to
  [Connecting <%= vars.product_short %> to an LDAP Server](configuring-ldap.html).
  * To use SAML for UAA, select **SAML Identity Provider** and continue to
  [Connecting <%= vars.product_short %> to a SAML Identity Provider](configuring-saml.html).
