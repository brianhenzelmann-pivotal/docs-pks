---
title: About Enterprise PKS Upgrades
owner: PKS
---

This topic provides conceptual information about <%= vars.product_short %> upgrades,
including upgrading the PKS control plane and PKS-provisioned Kubernetes clusters.

For step-by-step instructions on upgrading <%= vars.product_short %>, see:

* [Upgrading Enterprise PKS](upgrade-pks.html)
* [Upgrading Enterprise PKS with NSX-T](upgrade-pks-nsxt.html)
* [Upgrading Clusters](upgrade-clusters.html)

## <a id="overview"></a>Overview

An <%= vars.product_short %> upgrade modifies the version of <%= vars.product_short %>,
for example, from v1.6.x to v1.7.0 or from v1.7.0 to v1.7.1.

By default, <%= vars.product_short %> is set to perform a full upgrade,
which upgrades both the PKS control plane and all PKS-provisioned Kubernetes clusters.

However, you can choose to upgrade <%= vars.product_short %> in two phases
by upgrading the PKS control plane first and
then upgrading your PKS-provisioned Kubernetes clusters later.

Both the full upgrade and the PKS control plane upgrade are performed
through the <%= vars.product_tile %> tile only.
When upgrading PKS-provisioned Kubernetes clusters, you can use either the <%= vars.product_tile %> tile or the PKS CLI.
See the table below.

<table>
<col width="50%">
<col width="25%">
<col width="25%">
  <tr>
    <th rowspan=2>Upgrade type</th>
    <th colspan=2 style="text-align:center">Upgrade method</th>    
  </tr>
  <tr>
    <th>PKS Tile</th>
    <th>PKS CLI</th>    
  </tr>
  <tr>
    <td>Full PKS upgrade</td>
    <td>&#10004;</td>
    <td>&#10006;</td>
  </tr>
  <tr>
    <td>PKS control plane only</td>
    <td>&#10004;</td>
    <td>&#10006;</td>
  </tr>
  <tr>
    <td>Kubernetes clusters only</td>
    <td>&#10004;</td>
    <td>&#10004;</td>
  </tr>
</table>

Typically, if you choose to upgrade PKS-provisioned Kubernetes clusters only,
you will upgrade them through the PKS CLI.

## <a id=""></a> Deciding Between Full and Two-Phase Upgrade

Before deciding whether to perform the default full upgrade or
to upgrade the PKS control plane and PKS-provisioned Kubernetes separately,
consider your organization and <%= vars.product_short %> deployment needs.
For example, if your organization runs PKS-provisioned Kubernetes clusters
in both development and production environments and you want to upgrade
only one of the environments first, you can achieve your goal by
upgrading the PKS control plane and PKS-provisioned Kubernetes separately
instead of performing a full upgrade.

Examples of other advantages of
upgrading <%= vars.product_short %> in two phases include:

* Faster <%= vars.product_tile %> tile upgrades.
If you have a large number of clusters in your <%= vars.product_short %> deployment,
performing a full upgrade can significantly increase the amount of time required to
upgrade the <%= vars.product_tile %> tile.

* More granular control over cluster upgrades.
In addition to enabling you to upgrade subsets of clusters,
the PKS CLI supports upgrading each cluster individually.

* Better troubleshooting experience. Explanation.

## <a id="what-happens"></a> What Happens During Upgrades

"and automatically migrates your configuration settings into the new tile version."

During a <%= vars.product_short %> control plane upgrade to v1.7, the <%= vars.product_tile %> tile does the following:

1. **Creates MySQL VM (First-time v1.7 Upgrade Only)**: When you first upgrade from <%= vars.product_short %> v1.6 to v1.7, the upgrade process creates the <%= vars.control_plane_db %> VM, a new dedicated MySQL VM.
  - This MySQL VM resides alongside the <%= vars.control_plane %> VM on the PKS Control Plane.
  - The upgrade process then migrates the PKS v1.6 MySQL data from the <%= vars.control_plane %> VM onto the new dedicated MySQL VM.
  - Subsequent <%= vars.product_short %> upgrades, from earlier to later patch versions of PKS v1.7, do not include this step.

1. **Recreates the Control Plane VMs** which host the PKS API and UAA servers.
This control plane recreation causes temporary outages as described in [Control Plane Outages](#outages), below.

1. **(Optional) Upgrades Clusters**
  * Upgrading <%= vars.product_short %> only upgrades its Kubernetes clusters if the **Upgrade all clusters errand** checkbox is enabled in the **Errands** pane.
  * The cluster upgrade process recreates all clusters, which may cause cluster outages.  
  For more information, see the [What Happens During Cluster Upgrades](./upgrade-clusters.html#what) section of the _Upgrading Clusters_ topic.






Full minor 1,2,3
Full patch 2,3

PKS control plane only minor 1,2
PKS control plane only patch 2


Clusters only minor (tile) 3
Clusters only patch (tile) 3

Cluster only CLI
Cluster only CLI



### <a id="outages"></a> Control Plane Outages

Upgrading the <%= vars.product_short %> control plane temporarily interrupts the following:

  * Logging in to the PKS CLI and using all `pks` commands
  * Using the PKS API to retrieve information about clusters
  * Using the PKS API to create and delete clusters
  * Using the PKS API to resize clusters

Recreating the PKS API server does not affect the Kubernetes clusters themselves.

  * During PKS control plane upgrade, you can still interact with clusters and their workloads using the Kubernetes Command Line Interface, `kubectl`.

For more information about the PKS control plane, see [PKS Control Plane Overview](control-plane.html#control-plane) in _<%= vars.product_short %> Architecture_.

### <a id="canary"></a>Canary Instances

The <%= vars.product_tile %> tile is a BOSH deployment.

BOSH-deployed products can set a number of canary instances to upgrade first, before the rest of the deployment VMs.
BOSH continues the upgrade only if the canary instance upgrade succeeds.
If the canary instance encounters an error, the upgrade stops running and other VMs are not affected.

The <%= vars.product_tile %> tile uses one canary instance when deploying or upgrading <%= vars.product_short %>.


"**Limitations** After performing a tile-only upgrade, 
  you cannot perform another <%= vars.product_tile %> tile upgrade 
  until you have upgraded your Kubernetes clusters to the current <%= vars.product_short %> version.  "


##<a id="tile-only"></a> Tile-Only Upgrade

To perform a tile-only <%= vars.product_tile %> upgrade, in order to upgrade your control plane without upgrading your clusters yet, do the following:

  1. Review [Limitations](#limitations).
  1. Complete the steps listed in [Prerequisites](#prerequisites).
  1. Complete the steps listed in [Disable Errand and Apply Changes](#modify-apply).

  <p class="note"><strong>Note:</strong> Tile-only upgrades cause the <%= vars.k8s_runtime_abbr %> version tagged in Kubernetes clusters to fall behind the <%= vars.product_short %> tile version.
    If the clusters fall more than one version behind the tile,
    <%= vars.product_short %> cannot upgrade the clusters.</p>

###<a id='limitations'></a> Limitations

After performing a tile-only <%= vars.product_tile %> upgrade, 
you cannot perform another <%= vars.product_tile %> upgrade until you upgrade your clusters.  

To simultaneously upgrade your <%= vars.product_tile %>
tile and existing Kubernetes clusters,
do not disable **Upgrade all clusters errand** in the <%= vars.product_tile %> tile.

###<a id='prerequisites'></a>Prerequisites

Before performing a tile-only <%= vars.product_tile %> upgrade, you must do the following:

* Install the PKS command line interface (CLI) v1.7. For more information, see [Installing the PKS CLI](installing-pks-cli.html).
1. Download the new <%= vars.product_short %> product file from [VMware Tanzu Network](https://network.pivotal.io/products/pivotal-container-service) and import it into the Ops Manager **Installation Dashboard**.
* Log in to <%= vars.product_short %> using `pks login`. For more information, see [Logging in to <%= vars.product_short %>](login.html).

###<a id='errand-apply'></a> Disable Errand and Apply Changes

To perform the tile-only <%= vars.product_short %> upgrade:

1. In the <%= vars.product_short %> tile, navigate to the **Errands** pane.
1. Disable **Upgrade all clusters errand** and click **Save**.
1. Return to the Ops Manager **Installation Dashboard** and click **Review Pending Changes**.
1. Select <%= vars.product_short %> and any other products that you want to deploy and click **Apply Changes**.

##<a id="after"></a> After a Tile-Only Upgrade

All changes applied to the <%= vars.product_tile %> tile, including upgrades and configuration changes,
must be propagated to your Kubernetes clusters before the next tile upgrade.
Therefore, if you perform a tile-only <%= vars.product_tile %> upgrade, you must upgrade all your Kubernetes clusters
before the next <%= vars.product_tile %> tile upgrade.

After a tile-only upgrade, you can use the PKS CLI commands `pks upgrade-cluster` and `pks upgrade-clusters` to upgrade Kubernetes clusters individually, in groups, or in groups with specified canary clusters.
See [Upgrading Clusters](upgrade-clusters.html#upgrade-clusters) for instructions.

<p class="note"><strong>Note:</strong> If clusters fall more than one previously-installed <%= vars.k8s_runtime_abbr %> version behind the current <%= vars.product_short %> tile version, subsequent cluster upgrade attempts will fail.
